{
	"name": "OrderFox Development Container",
	"dockerFile": "Dockerfile",
	"context": "..",
	
	// Configure which ports to forward
	"forwardPorts": [8000, 3000, 5678],
	"portsAttributes": {
		"8000": {
			"label": "FastAPI Backend",
			"onAutoForward": "notify"
		},
		"3000": {
			"label": "Vite Dev Server",
			"onAutoForward": "notify"
		},
		"5678": {
			"label": "Python Debug",
			"onAutoForward": "silent"
		}
	},

	// Set environment variables (matching hierarchical .env structure)
	"containerEnv": {
		// Global project settings (from root .env)
		"NODE_ENV": "development",
		"DEVCONTAINER_MODE": "true",
		"PYTHONPATH": "/workspaces/orderfox",
		"WORKSPACE_FOLDER": "/workspaces/orderfox",
		"PYTHONDONTWRITEBYTECODE": "1",
		"PYTHONUNBUFFERED": "1",
		"FASTAPI_PORT": "8000",
		"VITE_PORT": "3000",
		"WAIT_FOR_DEPS": "true",
		// Backend-specific settings (from backend/.env)
		"ENVIRONMENT": "development",
		"DEBUG": "false",
		"LOG_LEVEL": "INFO",
		"CONSOLE_LOGGING": "true",
		"REQUEST_LOGGING": "false",
		"USE_DEPTH_CACHE_MANAGER": "true",
		"SERVE_STATIC_FILES": "true",
		"STATIC_FILES_PATH": "../frontend_vanilla/dist",
		"CORS_ORIGINS": "http://localhost:3000,http://127.0.0.1:3000,http://0.0.0.0:3000",
		"WS_HEARTBEAT_INTERVAL": "30",
		"WS_TIMEOUT": "60",
		"BINANCE_WS_BASE_URL": "wss://fstream.binance.com",
		"BINANCE_API_BASE_URL": "https://fapi.binance.com",
		"PAPER_TRADING": "true",
		"MAX_ORDERBOOK_LIMIT": "5000",
		"FIREBASE_PROJECT_ID": "orderfox-dev",
		"FIREBASE_CONFIG_JSON": "",
		"FASTAPI_HOST": "0.0.0.0",
		"UVICORN_HOST": "0.0.0.0",
		"UVICORN_RELOAD": "true",
		"UVICORN_LOG_LEVEL": "info"
	},

	// Configure VS Code settings and extensions
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-python.debugpy",
				"ms-python.black-formatter",
				"dbaeumer.vscode-eslint",
				"esbenp.prettier-vscode",
				"eamodio.gitlens",
				"rangav.vscode-thunder-client",
				"humao.rest-client",
				"ms-azuretools.vscode-docker",
				"ritwickdey.liveserver",
				"yzhang.markdown-all-in-one",
				"gruntfuggly.todo-tree",
				"hediet.vscode-drawio",
				"ms-vscode.vscode-json",
				"anthropic.claude-vscode",
				"agg4code.claude-image-paste",
				"oderwat.indent-rainbow",
				"oleg-shilo.linesight",
				"christian-kohler.npm-intellisense",
				"christian-kohler.path-intellisense",
				"ethanfann.restore-terminals",
				"pkief.material-icon-theme"
			],
			"settings": {
				"python.defaultInterpreterPath": "/usr/local/bin/python",
				"python.formatting.provider": "black",
				"python.analysis.typeCheckingMode": "basic",
				"python.testing.pytestEnabled": true,
				"python.testing.unittestEnabled": false,
				"python.testing.pytestArgs": [
					"backend/tests"
				],
				"editor.formatOnSave": true,
				"editor.codeActionsOnSave": {
					"source.organizeImports": "explicit"
				},
				"files.exclude": {
					"**/__pycache__": true,
					"**/.pytest_cache": true,
					"**/node_modules": true,
					"**/.git": false
				},
				"terminal.integrated.defaultProfile.linux": "zsh",
				"terminal.integrated.profiles.linux": {
					"zsh": {
						"path": "/usr/bin/zsh"
					},
					"bash": {
						"path": "/bin/bash"
					}
				},
				"git.autofetch": true,
				"git.confirmSync": false,
				"workbench.colorTheme": "Visual Studio Dark",
				"workbench.iconTheme": "material-icon-theme"
			}
		}
	},

	// Post-create command to set up the development environment
	"postCreateCommand": "bash .devcontainer/post-create.sh",

	// Use VS Code's default workspace mounting
	// "mounts": [], // VS Code will automatically mount to /workspaces/orderfox

	// Run as vscode user
	"remoteUser": "vscode",

	// Features to add to the dev container
	"features": {
		"ghcr.io/devcontainers/features/github-cli:1": {
			"version": "latest"
		},
		"ghcr.io/devcontainers/features/common-utils:2": {
			"installZsh": true,
			"installOhMyZsh": true,
			"installOhMyZshConfig": true,
			"configureZshAsDefaultShell": true,
			"username": "vscode",
			"uid": "1000",
			"gid": "1000"
		}
	},

	// Lifecycle scripts
	"initializeCommand": "echo 'Initializing OrderFox Dev Container...'",
	"onCreateCommand": "echo 'Dev Container created successfully!'",
	"updateContentCommand": "echo 'Updating dev container content...'",
	"postStartCommand": "echo 'Dev Container started. Ready for development!'"
}