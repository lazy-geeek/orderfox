services:
  orderfox-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: orderfox-dev-container
    volumes:
      - ../:/workspaces/orderfox:cached
      - orderfox-node-modules:/workspaces/orderfox/frontend_vanilla/node_modules
      - orderfox-pip-cache:/root/.cache/pip
      # Mount Claude Code settings and commands from host
      - /home/bail/.claude:/home/vscode/.claude:ro
    ports:
      - "3000:3000"   # Frontend Vite dev server
      - "8000:8000"   # FastAPI Backend
      - "5678:5678"   # Python Debug Port
    environment:
      - NODE_ENV=development
      - DEVCONTAINER_MODE=true
      - PYTHONPATH=/workspaces/orderfox
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - DEBUG=true
      # Database configuration - using container hostname
      - DATABASE_URL=postgresql://orderfox_user:orderfox_password@postgres:5432/orderfox_db
    networks:
      - orderfox-network
    working_dir: /workspaces/orderfox
    command: bash .devcontainer/docker-entrypoint.sh
    stdin_open: true
    tty: true
    depends_on:
      postgres:
        condition: service_healthy

  # PostgreSQL database service
  postgres:
    image: postgres:16
    container_name: orderfox-postgres-dev
    environment:
      POSTGRES_DB: orderfox_db
      POSTGRES_USER: orderfox_user
      POSTGRES_PASSWORD: orderfox_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - orderfox-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orderfox_user -d orderfox_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  
volumes:
  orderfox-node-modules:
    name: orderfox-node-modules
  orderfox-pip-cache:
    name: orderfox-pip-cache
  postgres_data:
    name: orderfox-postgres-data

networks:
  orderfox-network:
    name: orderfox-network
    driver: bridge